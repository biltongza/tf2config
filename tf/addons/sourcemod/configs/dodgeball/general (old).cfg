// -------------------------------------------------------
// Events
// -------------------------------------------------------
// 
// In order to further customize the rocket types, you can
// set a command to be executed when a certain event happens
// with a dodgeball rocket.
//
// The events that are right now implemented are the following:
//
// on spawn- When a rocket spawns.
// on deflect- A client has deflected a rocket.
// on kill- One of the rockets has killed the client.
// on explode- Same as on kill, only triggered once.
//
// The possible parameters passed for the commands are the following.
//
// @name         - Name of the projectile type
// @rocket       - Rocket entity index
// @owner        - Owner client userid
// @target       - Target client userid
// @dead         - Last dead client
// @speed        - Speed of the rocket
// @deflections  - Number of rocket deflections
// 
// -------------------------------------------------------
// Commands
// -------------------------------------------------------
//
// For using with the events system, the plugin has two useful
// commands if you want to make kickass explosion blasts.
//
// tf_dodgeball_explosion <client>
// Shows a huge explosion at the location of the specified client.
//
// tf_dodgeball_shockwave <client> <damage> <force> <radius> <falloff>
// Wich applies a huge shockwave at the location of the client.
//
// If you are able to write plugins, you can include your custom
// commands too!
// -------------------------------------------------------

tf2_dodgeball
{

    "general"
    {
        "music"                            "1"      // Play music on Dodgeball gamemode?
        
        "round start"                      "1"                                          // Music to play on round start (before gameplay start)
        "round end (win)"                  "1"                                          // Music to play for the winner team
        "round end (lose)"                 "1"                                          // Music to play for the loser team
        "gameplay"                         "1"                                          // Music to play when the gameplay starts. This one stops
                                                                                       // at round end.
        
        "use web player"                   "0"      // If the use of web player is enabled, these will be
        "web player url"                   ""       // used instead of the gameplay music
    }
    
    "classes"
    {
        "common"
        {
            // >>> Basic parameters <<<
            "name"                        "Homing Rocket"    // Full name of the rocket type
            "behaviour"                   "homing"           // The only behaviour right now is homing :P
            "model"                       ""                 // Default: Common rocket model
            "is animated"                 "1"                // Only works when using a custom model
            "play spawn sound"            "1"                // Does the rocket emit a sound when spawning?
            "play beep sound"             "1"                // Does the rocket emit a beeping sound?
            "play alert sound"            "1"                // Does the rocket emit an alert sound to the client when being targetted?
            "spawn sound"                 ""                 // Default: Sentry rocket sound
            "beep sound"                  ""                 // Default: Sentry searching sound
            "alert sound"                 ""                 // Default: Sentry client spotted sound
            "beep interval"               "0"                // Emit sound every x time
            
            // >>> Specific behaviour modificators <<<
            "elevate on deflect"          "1"                // Does the rocket can elevate after deflection?
            "neutral rocket"              "0"                // Does this rocket has no team based targets?
            
            // >>> Movement parameters <<<
            "damage"                      "55"               // Base damage done by the rocket.
            "damage increment"            "30"               // Increment per reflection.
            "speed"                       "1000"              // Base speed for the rocket.
            "speed increment"             "153"              // Speed increment per reflection.
            "turn rate"                   "0.183"            // Turn rate / tick for this rocket.
            "turn rate increment"         "0.0175"           // Increment per deflection.
            "elevation rate"              "0.1050"          // Elevation rate when deflected (if enabled)
            "elevation limit"             "0.140"            // Maximum elevation when deflected (if enabled)
            "control delay"               "0.00"             // Delay until the rocket starts tracking the target after a deflection.
            "critical chance"             "100"              // Percentage of chance for a critical rocket.
            "no. players modifier"        "0.0"             // Increment based upon the number of players in the server.
            "no. rockets modifier"        "0.0"              // Increment based upon the number of rockets fired since the start of the round.
            "direction to target weight"  "25"               // Weight modifier for target selection, based upon the direction of the rocket
                                                             // to the client.
            // >>> Events <<<
            "on spawn"                    ""                 // Actions to execute on rocket spawn.
            "on deflect"                  ""                 // Actions to execute when a rocket is deflected.
            "on kill"                     ""                 // Actions to execute when a rocket kills a client.
            "on explode"                  ""                 // Actions to execute when a rocket kills a client (triggered once).
        }
    
        "nuke"
        {
            // >>> Basic parameters <<<
            "name"                        "Nuke!"
            "behaviour"                   "homing"
            "model"                       "models/custom/dodgeball/nuke/nuke.mdl"
            "is animated"                 "1"
            "play spawn sound"            "1"
            "play beep sound"             "1"
            "play alert sound"            "1"
            "spawn sound"                 "1"
            "beep sound"                  "1"
            "alert sound"                 "1"
            "beep interval"               "0.7"
            
            // >>> Specific behaviour modificators <<<
            "elevate on deflect"          "1"
            "neutral rocket"              "1"
            
            // >>> Movement parameters <<<
            "damage"                      "3000000"
            "damage increment"            "0"
            "speed"                       "1000"
            "speed increment"             "300"
            "turn rate"                   "0.25"
            "turn rate increment"         "0.025"
            "elevation rate"              "0.65"
            "elevation limit"             "0.8"
            "control delay"               "0.0075"
            "critical chance"             "100"
            "no. players modifier"        "0.0"
            "no. rockets modifier"        "0.0"
            "direction to target weight"  "25"
            
            // >>> Events <<<
            "on spawn"                    ""
            "on deflect"                  ""
            "on kill"                     ""
            "on explode"                  "tf_dodgeball_explosion @dead ; tf_dodgeball_shockwave @dead 200 700 700 200 ; sm_say BOOM!"
        }
    }
    
    "spawners"
    {
        // >>> Default RED spawner <<<
        "Red"
        {
            // >>> Basic parameters <<<
            "max rockets"            "3"                // Max no. of rockets before the spawner can fire another.
            "interval"               "2.0"              // Minimum time between rocket fires.
            
            // >>> Chances table <<<
            "common%"                "90"               // Chance to spawn a common rocket
            "nuke%"                  "10"               // Chance to spawn a nuke rocket
        }
        
        // >>> Default BLU spawner <<<
        "Blue"
        {
            // >>> Basic parameters <<<
            "max rockets"            "3"               // Max no. of rockets before the spawner can fire another.
            "interval"               "2.0"             // Minimum time between rocket fires.
            
            // >>> Chances table <<<
            "common%"                "90"              // Chance to spawn a common rocket
            "nuke%"                  "10"              // Chance to spawn a nuke rocket
        }
    }
}